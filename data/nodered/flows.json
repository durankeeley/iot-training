[
    {
        "id": "b24832b4e999b765",
        "type": "tab",
        "label": "Dashboard (View)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5a2232a0ad54701",
        "type": "tab",
        "label": "API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2630139d768446f5",
        "type": "tab",
        "label": "Digital Twin (Model)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a2c878adf4bf8238",
        "type": "tab",
        "label": "Controller",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "791ee090065d0354",
        "type": "tab",
        "label": "Other Examples",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "416b4cfa723dacfc",
        "type": "tab",
        "label": "Other Examples Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "026298844e40e6a3",
        "type": "tab",
        "label": "Event Sourcing and UUID Generator",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6a49aaad01af3b78",
        "type": "junction",
        "z": "b24832b4e999b765",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "074d29f27e7285ac",
                "f262fe36acd93737"
            ]
        ]
    },
    {
        "id": "bb3d9954ee424d7c",
        "type": "junction",
        "z": "a2c878adf4bf8238",
        "x": 380,
        "y": 600,
        "wires": [
            [
                "090655027f951676",
                "52afe41275239e3d"
            ]
        ]
    },
    {
        "id": "ed6162e87a14e35e",
        "type": "junction",
        "z": "a2c878adf4bf8238",
        "x": 480,
        "y": 440,
        "wires": [
            [
                "1d9b601f8c5ee514",
                "09fd9f48c65c8163"
            ]
        ]
    },
    {
        "id": "67918c287c20051e",
        "type": "junction",
        "z": "a2c878adf4bf8238",
        "x": 460,
        "y": 360,
        "wires": [
            [
                "d8f189e2d5e45a0e",
                "4a180ec6ca8e8f19"
            ]
        ]
    },
    {
        "id": "c2edd192eba95927",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6e4306a6baef1e6a",
        "type": "ui_tab",
        "name": "Home",
        "icon": "Temp",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f7b70e60d0a652f2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9b09be91128b1f9a",
        "type": "ui_group",
        "name": "Default",
        "tab": "6e4306a6baef1e6a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2afe8db4ac72fac1",
        "type": "ui_tab",
        "name": "Other Examples",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "887cfe5264410fb8",
        "type": "ui_group",
        "name": "Default",
        "tab": "2afe8db4ac72fac1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "01d48e6a2a3695d5",
        "type": "postgreSQLConfig",
        "name": "postgres",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "true",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "postgres",
        "passwordFieldType": "str"
    },
    {
        "id": "074d29f27e7285ac",
        "type": "ui_gauge",
        "z": "b24832b4e999b765",
        "name": "",
        "group": "9b09be91128b1f9a",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Rate",
        "label": "units",
        "format": "{{payload.temperature}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 460,
        "y": 260,
        "wires": []
    },
    {
        "id": "f262fe36acd93737",
        "type": "ui_chart",
        "z": "b24832b4e999b765",
        "name": "",
        "group": "9b09be91128b1f9a",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 470,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "0a6df1f1fe0fe0de",
        "type": "link in",
        "z": "b24832b4e999b765",
        "name": "controller-to-view-temp-IN",
        "links": [
            "5e2e4e48331fb62d"
        ],
        "x": 325,
        "y": 300,
        "wires": [
            [
                "6a49aaad01af3b78"
            ]
        ]
    },
    {
        "id": "3d20aa69f64dfafb",
        "type": "ui_switch",
        "z": "b24832b4e999b765",
        "name": "",
        "label": "Garage Door",
        "tooltip": "",
        "group": "9b09be91128b1f9a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 470,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "fdfb24a0afb0a1b8",
        "type": "link in",
        "z": "b24832b4e999b765",
        "name": "controller-to-garagedoor-temp-IN",
        "links": [
            "7d9194ef10e312c3"
        ],
        "x": 325,
        "y": 360,
        "wires": [
            [
                "3d20aa69f64dfafb"
            ]
        ]
    },
    {
        "id": "cac6c00c5fbc1438",
        "type": "http in",
        "z": "e5a2232a0ad54701",
        "name": "",
        "url": "/api/sensor/digitaltwin/temp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "769e4d71eb302fd7"
            ]
        ]
    },
    {
        "id": "769e4d71eb302fd7",
        "type": "change",
        "z": "e5a2232a0ad54701",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sensorTemperature",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "c26370e148a70949"
            ]
        ]
    },
    {
        "id": "c26370e148a70949",
        "type": "http response",
        "z": "e5a2232a0ad54701",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 600,
        "y": 260,
        "wires": []
    },
    {
        "id": "632c9a3437f6f278",
        "type": "comment",
        "z": "e5a2232a0ad54701",
        "name": "get sensor data",
        "info": "",
        "x": 180,
        "y": 220,
        "wires": []
    },
    {
        "id": "63b606672288a607",
        "type": "http in",
        "z": "e5a2232a0ad54701",
        "name": "",
        "url": "/api/control/digitaltwin/garagedoor",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 420,
        "wires": [
            [
                "4b35ecce7dba8312"
            ]
        ]
    },
    {
        "id": "7a42727a3d409c45",
        "type": "mqtt out",
        "z": "e5a2232a0ad54701",
        "name": "",
        "topic": "control/digitaltwin/garagedoor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c2edd192eba95927",
        "x": 710,
        "y": 420,
        "wires": []
    },
    {
        "id": "4b35ecce7dba8312",
        "type": "function",
        "z": "e5a2232a0ad54701",
        "name": "validation",
        "func": "var title = msg.payload;\nvar response = msg.res\nif (title === \"open\") {\n    var msg1 = {\n        payload: \"open\",\n        res: response\n    };\n    return [msg1, null];\n}\nelse if (title === \"close\") {\n    var msg2 = {\n        payload: \"close\",\n        res: response\n    };\n    return [msg2, null];\n}\nelse {\n    var msg3 = {\n        payload: \"incorrect value\",\n        res: response\n    };\n    return [null, msg3];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 420,
        "wires": [
            [
                "cfba18f04f4b3122",
                "7a42727a3d409c45"
            ],
            [
                "66ad1ab0effdb096"
            ]
        ]
    },
    {
        "id": "66ad1ab0effdb096",
        "type": "http response",
        "z": "e5a2232a0ad54701",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 640,
        "y": 480,
        "wires": []
    },
    {
        "id": "327240bbf41f7b79",
        "type": "comment",
        "z": "e5a2232a0ad54701",
        "name": "open/close garage door",
        "info": "",
        "x": 200,
        "y": 380,
        "wires": []
    },
    {
        "id": "cfba18f04f4b3122",
        "type": "link out",
        "z": "e5a2232a0ad54701",
        "name": "digitaltwin-device",
        "mode": "link",
        "links": [
            "feadc6cd9f1a1b8c"
        ],
        "x": 595,
        "y": 380,
        "wires": []
    },
    {
        "id": "1de2a058493f170a",
        "type": "inject",
        "z": "2630139d768446f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "6a1f13a2feaa47c1"
            ]
        ]
    },
    {
        "id": "6a1f13a2feaa47c1",
        "type": "random",
        "z": "2630139d768446f5",
        "name": "",
        "low": 1,
        "high": 10,
        "inte": "true",
        "property": "payload",
        "x": 320,
        "y": 300,
        "wires": [
            [
                "18ce77df3be5208d"
            ]
        ]
    },
    {
        "id": "18ce77df3be5208d",
        "type": "template",
        "z": "2630139d768446f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"temperature\": {{payload}},\n    \"humidity\": {{payload}},\n    \"voltage\": 2.964,\n    \"battery\": 84,\n    \"location\": \"bedroomSpare\"\n}",
        "output": "str",
        "x": 460,
        "y": 300,
        "wires": [
            [
                "c676eaf938b6e4a3"
            ]
        ]
    },
    {
        "id": "6183493056a0b27e",
        "type": "mqtt out",
        "z": "2630139d768446f5",
        "name": "",
        "topic": "sensor/digitaltwin/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c2edd192eba95927",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "6f8be0f7756b5fec",
        "type": "comment",
        "z": "2630139d768446f5",
        "name": "temp sensor simple",
        "info": "temp sensor",
        "x": 170,
        "y": 260,
        "wires": []
    },
    {
        "id": "a16d9ede2d2fae8b",
        "type": "function",
        "z": "2630139d768446f5",
        "name": "randomGenerator",
        "func": "// Generate three random values\nvar timestamp = new Date().toISOString();\nvar value1 = Math.floor(Math.random() * 35);\nvar value2 = Math.floor(Math.random() * 80);\n\n// Combine the values into a single object\nmsg.payload = {\n    timestamp: timestamp,\n    temperature: value1,\n    humidity: value2\n};\n\n// Return the combined object\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 420,
        "wires": [
            [
                "e609375e2c64e8ac"
            ]
        ]
    },
    {
        "id": "5ff000db17de0f2d",
        "type": "inject",
        "z": "2630139d768446f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "a16d9ede2d2fae8b"
            ]
        ]
    },
    {
        "id": "bac2cfdaf586bc71",
        "type": "mqtt out",
        "z": "2630139d768446f5",
        "name": "",
        "topic": "sensor/digitaltwin/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c2edd192eba95927",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "e9e97d97537a29b7",
        "type": "comment",
        "z": "2630139d768446f5",
        "name": "temp sensor adv",
        "info": "temp sensor",
        "x": 160,
        "y": 380,
        "wires": []
    },
    {
        "id": "e609375e2c64e8ac",
        "type": "template",
        "z": "2630139d768446f5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"timestamp\": \"{{payload.timestamp}}\",\n    \"temperature\": {{payload.temperature}},\n    \"humidity\": {{payload.humidity}},\n    \"voltage\": 2.964,\n    \"battery\": 84,\n    \"location\": \"bedroomSpare\"\n}",
        "output": "str",
        "x": 500,
        "y": 420,
        "wires": [
            [
                "76085d9d3672d180"
            ]
        ]
    },
    {
        "id": "c676eaf938b6e4a3",
        "type": "json",
        "z": "2630139d768446f5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 300,
        "wires": [
            [
                "6183493056a0b27e",
                "8c1a8ef1e61d557f"
            ]
        ]
    },
    {
        "id": "76085d9d3672d180",
        "type": "json",
        "z": "2630139d768446f5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 420,
        "wires": [
            [
                "bac2cfdaf586bc71",
                "8c1a8ef1e61d557f"
            ]
        ]
    },
    {
        "id": "8c1a8ef1e61d557f",
        "type": "debug",
        "z": "2630139d768446f5",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 360,
        "wires": []
    },
    {
        "id": "5be8e1d767633b46",
        "type": "function",
        "z": "2630139d768446f5",
        "name": "randomGenerator",
        "func": "// Generate three random values\nvar timestamp = new Date().toISOString();\nvar flowRate = Math.floor(Math.random() * 400);\nvar temperature = Math.floor(Math.random() * 80);\n\n// Combine the values into a single object\nmsg.payload = {\n    \"timestamp\": timestamp,\n    \"flow_rate\": flowRate,\n    \"total_flow\": 345.67,\n    \"total_volume\": 864.2,\n    \"unit\": \"gallons\",\n    \"interval\": \"minutes\",\n    \"temperature\": temperature,\n    \"pressure\": 50.0,\n    \"flow_direction\": \"incoming\",\n    \"flow_alarm\": \"low\",\n    \"status\": \"normal\"\n};\n\n// Return the combined object\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 600,
        "wires": [
            [
                "2dd7ab68123b779b"
            ]
        ]
    },
    {
        "id": "8e257582680f29d6",
        "type": "inject",
        "z": "2630139d768446f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "5be8e1d767633b46"
            ]
        ]
    },
    {
        "id": "39d84ff6717f79b8",
        "type": "mqtt out",
        "z": "2630139d768446f5",
        "name": "",
        "topic": "sensor/digitaltwin/watermeter",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c2edd192eba95927",
        "x": 830,
        "y": 600,
        "wires": []
    },
    {
        "id": "2dd7ab68123b779b",
        "type": "json",
        "z": "2630139d768446f5",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 630,
        "y": 600,
        "wires": [
            [
                "39d84ff6717f79b8",
                "b9de16145100dbb7"
            ]
        ]
    },
    {
        "id": "b9de16145100dbb7",
        "type": "debug",
        "z": "2630139d768446f5",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 560,
        "wires": []
    },
    {
        "id": "4ae50de30a66a363",
        "type": "mqtt in",
        "z": "a2c878adf4bf8238",
        "name": "",
        "topic": "sensor/digitaltwin/temp",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c2edd192eba95927",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 600,
        "wires": [
            [
                "bb3d9954ee424d7c"
            ]
        ]
    },
    {
        "id": "52afe41275239e3d",
        "type": "change",
        "z": "a2c878adf4bf8238",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temperature",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 640,
        "wires": [
            [
                "5e2e4e48331fb62d"
            ]
        ]
    },
    {
        "id": "090655027f951676",
        "type": "change",
        "z": "a2c878adf4bf8238",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorTemperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 600,
        "wires": [
            [
                "5e2e4e48331fb62d"
            ]
        ]
    },
    {
        "id": "5e2e4e48331fb62d",
        "type": "link out",
        "z": "a2c878adf4bf8238",
        "name": "controller-to-view-temp-OUT",
        "mode": "link",
        "links": [
            "0a6df1f1fe0fe0de"
        ],
        "x": 715,
        "y": 620,
        "wires": []
    },
    {
        "id": "64af0812ee890fe0",
        "type": "comment",
        "z": "a2c878adf4bf8238",
        "name": "garage door control",
        "info": "",
        "x": 250,
        "y": 340,
        "wires": []
    },
    {
        "id": "d49c03bfbd1b8d63",
        "type": "mqtt in",
        "z": "a2c878adf4bf8238",
        "name": "",
        "topic": "control/digitaltwin/garagedoor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c2edd192eba95927",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 380,
        "wires": [
            [
                "67918c287c20051e",
                "09fd9f48c65c8163"
            ]
        ]
    },
    {
        "id": "feadc6cd9f1a1b8c",
        "type": "link in",
        "z": "a2c878adf4bf8238",
        "name": "api-to-digitaltwin-garagedoor",
        "links": [
            "cfba18f04f4b3122"
        ],
        "x": 385,
        "y": 420,
        "wires": [
            [
                "ed6162e87a14e35e",
                "67918c287c20051e"
            ]
        ]
    },
    {
        "id": "1d9b601f8c5ee514",
        "type": "http response",
        "z": "a2c878adf4bf8238",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 580,
        "y": 480,
        "wires": []
    },
    {
        "id": "731ca5836534cb5a",
        "type": "rpi-gpio out",
        "z": "a2c878adf4bf8238",
        "name": "",
        "pin": "23",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 360,
        "wires": []
    },
    {
        "id": "d8f189e2d5e45a0e",
        "type": "change",
        "z": "a2c878adf4bf8238",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 360,
        "wires": [
            [
                "731ca5836534cb5a"
            ]
        ]
    },
    {
        "id": "09fd9f48c65c8163",
        "type": "delay",
        "z": "a2c878adf4bf8238",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "d3ffc1bdb1a656fd"
            ]
        ]
    },
    {
        "id": "d3ffc1bdb1a656fd",
        "type": "change",
        "z": "a2c878adf4bf8238",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 420,
        "wires": [
            [
                "731ca5836534cb5a"
            ]
        ]
    },
    {
        "id": "4a180ec6ca8e8f19",
        "type": "function",
        "z": "a2c878adf4bf8238",
        "name": "validation",
        "func": "var title = msg.payload;\nif (title === \"open\") {\n    var msg1 = {\n        payload: true\n    };\n    return [msg1, null];\n}\nelse if (title === \"close\") {\n    var msg2 = {\n        payload: false\n    };\n    return [msg2, null];\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 300,
        "wires": [
            [
                "7d9194ef10e312c3"
            ]
        ]
    },
    {
        "id": "7d9194ef10e312c3",
        "type": "link out",
        "z": "a2c878adf4bf8238",
        "name": "controller-to-garagedoor-temp-OUT",
        "mode": "link",
        "links": [
            "fdfb24a0afb0a1b8"
        ],
        "x": 725,
        "y": 300,
        "wires": []
    },
    {
        "id": "fc450b161d625f58",
        "type": "inject",
        "z": "791ee090065d0354",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 380,
        "wires": [
            [
                "3df606d0bd6e8f7e"
            ]
        ]
    },
    {
        "id": "3df606d0bd6e8f7e",
        "type": "http request",
        "z": "791ee090065d0354",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://releases.ubuntu.com/jammy/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "d35fe32c0eff3d4f"
            ]
        ]
    },
    {
        "id": "d35fe32c0eff3d4f",
        "type": "html",
        "z": "791ee090065d0354",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "title",
        "ret": "text",
        "as": "single",
        "x": 670,
        "y": 380,
        "wires": [
            [
                "873182f13d652e69"
            ]
        ]
    },
    {
        "id": "873182f13d652e69",
        "type": "function",
        "z": "791ee090065d0354",
        "name": "",
        "func": "var title = msg.payload[0];\nvar beta = \"Ubuntu 22.04 LTS (Jammy Jellyfish) Beta\";\nif (title === beta){\nvar msg1 = {\n    payload: title\n};\nreturn [msg1, null];\n}\nelse {\nvar msg2 = {\n    topic: \"New version of \" + title + \" is released.\",\n    payload: title\n};\nreturn [null, msg2];    \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 380,
        "wires": [
            [
                "fdac3222d5c6b7f7"
            ],
            [
                "6d84b50de5ef4402"
            ]
        ]
    },
    {
        "id": "fdac3222d5c6b7f7",
        "type": "delay",
        "z": "791ee090065d0354",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 300,
        "wires": [
            [
                "3df606d0bd6e8f7e"
            ]
        ]
    },
    {
        "id": "6d84b50de5ef4402",
        "type": "debug",
        "z": "791ee090065d0354",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "f680196db207ccb0",
        "type": "inject",
        "z": "791ee090065d0354",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 540,
        "wires": [
            [
                "41379d188394dd22"
            ]
        ]
    },
    {
        "id": "41379d188394dd22",
        "type": "http request",
        "z": "791ee090065d0354",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pbtech.co.nz/product/MONAOC52400/AOC-24G2SE-24-Gaming-Monitor-VA-Panel-1920x1080-1M",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "cd779ec03d473352"
            ]
        ]
    },
    {
        "id": "cd779ec03d473352",
        "type": "html",
        "z": "791ee090065d0354",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "a.p_stock_title_dd",
        "ret": "text",
        "as": "multi",
        "x": 710,
        "y": 540,
        "wires": [
            [
                "d74e1012b21d5a6a"
            ]
        ]
    },
    {
        "id": "d74e1012b21d5a6a",
        "type": "link out",
        "z": "791ee090065d0354",
        "name": "pbtech-example-OUT",
        "mode": "link",
        "links": [
            "9629b00bf9fdae6f"
        ],
        "x": 895,
        "y": 540,
        "wires": []
    },
    {
        "id": "5813d4e562b3c991",
        "type": "inject",
        "z": "791ee090065d0354",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 600,
        "wires": [
            [
                "a8666f63d7fed7fb"
            ]
        ]
    },
    {
        "id": "a8666f63d7fed7fb",
        "type": "http request",
        "z": "791ee090065d0354",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pbtech.co.nz/product/VGAPOW27910/Powercolor-AMD-Radeon-RX-7900-XTX-Graphics-Card-24",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "549762805ee8be97"
            ]
        ]
    },
    {
        "id": "549762805ee8be97",
        "type": "html",
        "z": "791ee090065d0354",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "a.p_stock_title_dd",
        "ret": "text",
        "as": "multi",
        "x": 710,
        "y": 600,
        "wires": [
            [
                "d74e1012b21d5a6a"
            ]
        ]
    },
    {
        "id": "e980c271a0a98e9c",
        "type": "comment",
        "z": "791ee090065d0354",
        "name": "check if released every 5m",
        "info": "",
        "x": 330,
        "y": 320,
        "wires": []
    },
    {
        "id": "61b56e243b10aac5",
        "type": "comment",
        "z": "791ee090065d0354",
        "name": "check if in stock at pb tech",
        "info": "",
        "x": 330,
        "y": 480,
        "wires": []
    },
    {
        "id": "ad891425bb77e4f6",
        "type": "ui_text",
        "z": "416b4cfa723dacfc",
        "group": "887cfe5264410fb8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PB Stock",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "9629b00bf9fdae6f",
        "type": "link in",
        "z": "416b4cfa723dacfc",
        "name": "pbtech-example-IN",
        "links": [
            "d74e1012b21d5a6a"
        ],
        "x": 225,
        "y": 120,
        "wires": [
            [
                "ad891425bb77e4f6",
                "620fb89d579eedb4"
            ]
        ]
    },
    {
        "id": "620fb89d579eedb4",
        "type": "debug",
        "z": "416b4cfa723dacfc",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 180,
        "wires": []
    },
    {
        "id": "831288f2f26842ed",
        "type": "inject",
        "z": "026298844e40e6a3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "e881a81a46391434"
            ]
        ]
    },
    {
        "id": "e881a81a46391434",
        "type": "function",
        "z": "026298844e40e6a3",
        "name": "function 1",
        "func": "var lut = []; for (var i = 0; i < 256; i++) { lut[i] = (i < 16 ? '0' : '') + (i).toString(16); }\nfunction randomUUID() {\n    var d0 = Math.random() * 0xffffffff | 0;\n    var d1 = Math.random() * 0xffffffff | 0;\n    var d2 = Math.random() * 0xffffffff | 0;\n    var d3 = Math.random() * 0xffffffff | 0;\n    return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' +\n        lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' +\n        lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] +\n        lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\n};\n\nvar timestamp = new Date().toISOString();\nvar value1 = Math.floor(Math.random() * 35);\nvar value2 = Math.floor(Math.random() * 80);\n\nvar guidId = randomUUID();\n\n// Combine the values into a single object\nmsg.payload = {\n    id: guidId,\n    timestamp: timestamp,\n    temperature: value1,\n    humidity: value2\n};\n\nglobal.set(guidId, msg.payload);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "bf3ee38a20f63aa7"
            ]
        ]
    },
    {
        "id": "bf3ee38a20f63aa7",
        "type": "debug",
        "z": "026298844e40e6a3",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 140,
        "wires": []
    },
    {
        "id": "86a8025eb8ec7056",
        "type": "http in",
        "z": "026298844e40e6a3",
        "name": "",
        "url": "/api/sensor/digitaltwin/temp/*",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "1d52f7f2726b0af1"
            ]
        ]
    },
    {
        "id": "89f3066667eabee7",
        "type": "http response",
        "z": "026298844e40e6a3",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 640,
        "y": 460,
        "wires": []
    },
    {
        "id": "1d52f7f2726b0af1",
        "type": "function",
        "z": "026298844e40e6a3",
        "name": "function 2",
        "func": "var response = msg.res\nvar urlParts = msg.req.url.split('/');\nvar variableName = urlParts[urlParts.length - 1];\n\nif (global.get(variableName)) {\n    msg = { \n        payload: global.get(variableName),\n        res: response\n        };\n    return [msg, null];\n} else {\n    msg = { \n        payload: 'The ID ' + variableName + ' does not exist.',\n        res: response\n        };\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 480,
        "wires": [
            [
                "89f3066667eabee7"
            ],
            [
                "60e0fb6fa5238ff6"
            ]
        ]
    },
    {
        "id": "60e0fb6fa5238ff6",
        "type": "http response",
        "z": "026298844e40e6a3",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 640,
        "y": 500,
        "wires": []
    },
    {
        "id": "a9bf46f65b943b17",
        "type": "http in",
        "z": "026298844e40e6a3",
        "name": "",
        "url": "/api/sensor/digitaltwin/temp",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "66cbc82745336f0c"
            ]
        ]
    },
    {
        "id": "a0e8c102ceed32a0",
        "type": "function",
        "z": "026298844e40e6a3",
        "name": "function 3",
        "func": "var messageTimestamp = msg.payload.timestamp;\nvar temperature = msg.payload.temperature;\nvar humidity = msg.payload.humidity;\nvar response = msg.res\n\nvar lut = []; for (var i = 0; i < 256; i++) { lut[i] = (i < 16 ? '0' : '') + (i).toString(16); }\nfunction randomUUID() {\n    var d0 = Math.random() * 0xffffffff | 0;\n    var d1 = Math.random() * 0xffffffff | 0;\n    var d2 = Math.random() * 0xffffffff | 0;\n    var d3 = Math.random() * 0xffffffff | 0;\n    return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' +\n        lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' +\n        lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] +\n        lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\n};\n\nvar messageUUID = randomUUID();\n\nmsg.payload = {\n    id: messageUUID,\n    timestamp: messageTimestamp,\n    temperature: temperature,\n    humidity: humidity\n};\n\nglobal.set(messageUUID, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "89f3066667eabee7"
            ]
        ]
    },
    {
        "id": "66cbc82745336f0c",
        "type": "json",
        "z": "026298844e40e6a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "a0e8c102ceed32a0"
            ]
        ]
    },
    {
        "id": "06e2048b9aa649ea",
        "type": "postgresql",
        "z": "026298844e40e6a3",
        "name": "",
        "query": "SELECT * FROM ;",
        "postgreSQLConfig": "01d48e6a2a3695d5",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 570,
        "y": 240,
        "wires": [
            []
        ]
    }
]